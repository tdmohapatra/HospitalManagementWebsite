@model HospitalManagementWebsite.Models.MenuModel.MenuControl




    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha1/dist/css/bootstrap.min.css" rel="stylesheet" integrity="sha384-KyZXEJc6wD5A1rx0mM6e7k3RjQHscg3M5zFfFw0PAwK8pZKqYZxcn1PxxdUP6UzC" crossorigin="anonymous">
    <style>
        .form-header {
            text-align: center;
            margin-bottom: 30px;
        }

        .back-link {
            margin-top: 20px;
            display: block;
            text-align: center;
        }

            .back-link a {
                font-weight: bold;
            }

        .container {
            margin-top: 30px;
        }

        .form-group {
            margin-bottom: 20px;
        }

            .form-group label {
                font-weight: bold;
            }

            .form-group .form-control {
                border-radius: 5px;
            }

        .form-check-input {
            border-radius: 5px;
        }

        .form-group .btn {
            width: 100%;
            font-size: 16px;
            padding: 10px;
        }

        .form-group .btn-primary {
            background-color: #007bff;
            border: none;
            transition: all 0.3s ease;
        }

            .form-group .btn-primary:hover {
                background-color: #0056b3;
            }

        .form-group .form-control {
            transition: border 0.3s ease;
        }

        .form-control:focus {
            border-color: #007bff;
            box-shadow: 0 0 10px rgba(0, 123, 255, 0.25);
        }

        .form-group .text-danger {
            font-size: 12px;
            margin-top: 5px;
        }

        .form-group .has-error .form-control {
            border-color: #e74c3c;
        }

        .form-group .has-error .text-danger {
            color: #e74c3c;
        }

        .back-link a {
            color: #6c757d;
            text-decoration: none;
        }

            .back-link a:hover {
                text-decoration: underline;
            }
    </style>


<!-- Main content of the page -->
<div class="container">
    @using (Html.BeginForm())
    {
        @Html.AntiForgeryToken()

        <div class="form-header">
            <h4>Create New Menu</h4>
            <p>Please fill in the details below to create a new menu.</p>
        </div>

        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

        <!-- DepartmentCode -->
        <div class="form-group row">
            @Html.LabelFor(model => model.DepartmentCode, htmlAttributes: new { @class = "col-md-2 col-form-label" })
            <div class="col-md-6">
                @Html.EditorFor(model => model.DepartmentCode, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.DepartmentCode, "", new { @class = "text-danger" })
            </div>
        </div>

        <!-- DesignationCode -->
        <div class="form-group row">
            @Html.LabelFor(model => model.DesignationCode, htmlAttributes: new { @class = "col-md-2 col-form-label" })
            <div class="col-md-6">
                @Html.EditorFor(model => model.DesignationCode, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.DesignationCode, "", new { @class = "text-danger" })
            </div>
        </div>

        <!-- MenuName -->
        <div class="form-group row">
            @Html.LabelFor(model => model.MenuName, htmlAttributes: new { @class = "col-md-2 col-form-label" })
            <div class="col-md-6">
                @Html.EditorFor(model => model.MenuName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.MenuName, "", new { @class = "text-danger" })
            </div>
        </div>

        <!-- MenuDescription -->
        <div class="form-group row">
            @Html.LabelFor(model => model.MenuDescription, htmlAttributes: new { @class = "col-md-2 col-form-label" })
            <div class="col-md-6">
                @Html.EditorFor(model => model.MenuDescription, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.MenuDescription, "", new { @class = "text-danger" })
            </div>
        </div>

        <!-- PageLink -->
        <div class="form-group row">
            @Html.LabelFor(model => model.PageLink, htmlAttributes: new { @class = "col-md-2 col-form-label" })
            <div class="col-md-6">
                @Html.EditorFor(model => model.PageLink, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.PageLink, "", new { @class = "text-danger" })
            </div>
        </div>

        <!-- ImportanceLevel -->
        <div class="form-group row">
            @Html.LabelFor(model => model.ImportanceLevel, htmlAttributes: new { @class = "col-md-2 col-form-label" })
            <div class="col-md-6">
                @Html.EditorFor(model => model.ImportanceLevel, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.ImportanceLevel, "", new { @class = "text-danger" })
            </div>
        </div>

        <!-- IsActive -->
        <div class="form-group row">
            @Html.LabelFor(model => model.IsActive, htmlAttributes: new { @class = "col-md-2 col-form-label" })
            <div class="col-md-6">
                <div class="form-check">
                    @Html.EditorFor(model => model.IsActive, new { htmlAttributes = new { @class = "form-check-input" } })
                    @Html.ValidationMessageFor(model => model.IsActive, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

        <!-- CreatedOn -->
        <div class="form-group row">
            @Html.LabelFor(model => model.CreatedOn, htmlAttributes: new { @class = "col-md-2 col-form-label" })
            <div class="col-md-6">
                @Html.EditorFor(model => model.CreatedOn, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.CreatedOn, "", new { @class = "text-danger" })
            </div>
        </div>

        <!-- Icon -->
        <div class="form-group row">
            @Html.LabelFor(model => model.Icon, htmlAttributes: new { @class = "col-md-2 col-form-label" })
            <div class="col-md-6">
                @Html.EditorFor(model => model.Icon, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Icon, "", new { @class = "text-danger" })
            </div>
        </div>

        <!-- Submit Button -->
        <div class="form-group row">
            <div class="col-md-6 offset-md-2">
                <button type="submit" class="btn btn-primary">Create Menu</button>
            </div>
        </div>
    }

    <!-- Back Link -->
    <div class="back-link" style="margin-bottom:5%;">
        @Html.ActionLink("<< Back to List", "Index", new { @class = "btn btn-secondary" })
    </div>
</div>



    <!-- Animation and Validation effects -->
    <script>
        // Smooth transition for form control focus
        $(".form-control").focus(function () {
            $(this).parent().addClass("has-focus");
        }).blur(function () {
            $(this).parent().removeClass("has-focus");
        });

        // Add animation effect to validation messages
        $(".text-danger").hide().fadeIn(1000);

        // Add an animation to the submit button after submission
        $("form").submit(function () {
            $(".btn-primary").addClass("btn-loading");
            $(".btn-loading").text("Submitting...");
        });
    </script>

