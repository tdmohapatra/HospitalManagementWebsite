<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>@ViewBag.Title - Hospital Management System</title>
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta3/css/all.min.css">
    <script src="https://code.jquery.com/jquery-3.6.4.min.js"></script>
    <style>
        /* General Styles */
        body {
            font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
            margin: 0;
            display: flex;
            flex-direction: column;
            height: 100vh;
            background-color: #f4f4f4;
        }

        /* Header Styles */
        header {
            background-color: #3498db; /* Header background color */
            color: white; /* Text color */
            padding: 5px 20px; /* Adjust padding for more space */
            display: flex; /* Flexbox layout for the header */
            justify-content: space-between; /* Distribute items between left and right */
            align-items: center; /* Vertically center items */
            position: fixed; /* Keep header fixed at the top */
            top: 0;
            width: 100%; /* Full width */
            z-index: 10; /* Ensure it's above other content */
            white-space: nowrap; /* Prevent text from wrapping */
        }

            header .digital-clock {
                font-family: 'Courier New', Courier, monospace; /* Digital font effect */
                font-size: 1rem; /* Use rem for font size */
                padding: 5px 10px;
                background: black;
                color: #00FF00; /* Green text to mimic a digital clock */
                border-radius: 5px;
                box-shadow: 0px 0px 10px #00FF00;
                margin-left:auto;/* Pushes the clock to the right */
                white-space: nowrap; /* Prevents wrapping of the clock text */
            }


            header h1 {
                font-size: 24px;
                margin: 0;
            }


        /* Footer Styles */
        footer {
            background-color: #3498db;
            color: white;
            text-align: center;
            padding: 10px 20px;
            width: 100%;
            position: fixed;
            bottom: 0;
        }

        /* Main Layout Styles */
        .main-layout {
            display: flex;
            flex-grow: 1;
            margin-top: 70px; /* Adjust for fixed header */
            margin-bottom: 40px; /* Adjust for footer */
        }

        /* Right Sidebar Styles */
        .right-sidebar {
            width: 10%; /* Maximum width for the sidebar */
            background-color: #3498db;
            color: white;
            position: fixed;
            right: 0;
            top: 70px;
            bottom: 40px;
            display: flex;
            flex-direction: column;
            padding: 10px;
            z-index: 5;
            overflow-y: auto;
        }

            .right-sidebar .tab {
                padding: 10px;
                margin-bottom: 5px;
                cursor: pointer;
                background-color: #2980b9;
                text-align: center;
                border-radius: 5px;
                transition: background 0.3s;
            }

                .right-sidebar .tab:hover {
                    background-color: #1f6fa6;
                }

            .right-sidebar .inner-tabs {
                display: none;
                padding-left: 10px;
            }

            .right-sidebar .tab:hover .inner-tabs {
                display: block;
            }

        /* Main Content Area */
        .main-content {
            flex-grow: 1;
            margin-right: 1%; /* Adjust for right sidebar */
            padding: 2%;
            overflow-y: auto;
        }


        .toggle-button{
            font-size:1rem;
            margin-right:1%;
            font-weight:bold;
            font-family:'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
            margin-left:10px;
            border-radius:10%
        }
        .toggle-buttonS {
            font-size: 0.8rem;
            margin-right: 1%;
            font-weight: bold;
            font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
            margin-left: 10px;
            border-radius: 50%;
            color:black;
            
           
        }
      
    </style>
    <style>
         /* Page Loader Styles */
        #pageLoader {
            position: fixed;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            background-color: rgba(0, 0, 0, 0.2); /* Semi-transparent background */
            display: flex;
            justify-content: center;
            align-items: center;
            z-index: 1000; /* Ensure loader is on top */
        }

        #loaderContainer {
            position: relative;
            width: 100px;
            height: 100px;
            background-color: white;
            border-radius: 10px;
            border: 10px solid transparent;
            border-top-color: #3498db; /* Color for top border */
            animation: borderAnimation 1s infinite linear; /* Border animation */
        }

        #loaderContainer img {
            position: absolute;
            top: 50%;
            left: 50%;
            transform: translate(-50%, -50%);
            width: 60px; /* Image size inside the loader */
        }

        /* Border animation */
       @@keyframes borderAnimation {
            0% {
                border-top-color: #3498db;
                border-right-color: transparent;
                border-bottom-color: transparent;
                border-left-color: transparent;
            }
            10% {
                border-top-color: transparent;
                border-right-color: #3498db;
                border-bottom-color: transparent;
                border-left-color: transparent;
            }
        20% {
            border-top-color: transparent;
            border-right-color: #3498db;
            border-bottom-color: transparent;
            border-left-color: transparent;
        }
        35% {
            border-top-color: transparent;
            border-right-color: #3498db;
            border-bottom-color: transparent;
            border-left-color: transparent;
        }
            50% {
                border-top-color: transparent;
                border-right-color: transparent;
                border-bottom-color: #3498db;
                border-left-color: transparent;
            }
            75% {
                border-top-color: transparent;
                border-right-color: transparent;
                border-bottom-color: transparent;
                border-left-color: #3498db;
            }
            100% {
                border-top-color: #3498db;
                border-right-color: transparent;
                border-bottom-color: transparent;
                border-left-color: transparent;
            }
        }
    </style>
</head>
<body>

    <!-- Header -->
    <header>
        <a href="https://localhost:44386/Home/TDMWELCOMEPAGE" style="text-decoration:none;">
            <h1 style="display: flex; align-items: center; color: transparent; background-image: linear-gradient(45deg, #ffd700, #ffcc00); -webkit-background-clip: text; background-clip: text; transition: background 1s ease-in-out;">
                <img src="~/Media/Images/TDMICON.png" height="60px" width="60px" style="margin-right: 10px;" />
                Hospital Management System
            </h1>
        </a>

        <!-- Settings Button (on the left side) -->


        <div class="digital-clock" id="digitalClock">
            <span id="currentDateTime"></span>
            <i class="fas fa-clock"></i> <!-- Clock icon from Font Awesome -->
            <span id="sessionTimer"> 00 : 00</span>
        </div>
        <button id="toggleMaster" class="toggle-button">☰</button> <!-- This is the button to toggle the sidebar -->
    </header>

    <div id="settingsPanel" style="display:none; position: fixed; top: 50px; right: 15%; width: 200px; background-color: #fff;margin-top:10%; border: 2px solid #3498db; padding: 15px; box-shadow: 0px 0px 10px rgba(0, 0, 0, 0.1); z-index: 1000;">
        <h3>Settings</h3>
        <div>
            <label>
                <input type="checkbox" id="toggleSidebar" checked> Show Sidebar
            </label>
        </div>
        <div>
            <label>
                <input type="checkbox" id="toggleClock" checked> Show Digital Clock
            </label>
        </div>
        <div>
            <label>
                <input type="checkbox" id="toggleTimer" checked> Show Session Timer
            </label>
        </div>
        <div>
            <label>
                <input type="checkbox" id="toggleLoader" checked> Show Loader
            </label>
        </div>
        <div>
            <label>Background Color:</label>
            <input type="color" id="backgroundColor" value="#f4f4f4">
        </div>
        <div>
            <label>Header Color:</label>
            <input type="color" id="headerColor" value="#3498db">
        </div>
        <div>
            <label>Footer Color:</label>
            <input type="color" id="footerColor" value="#2c3e50">
        </div>
        <div>
            <label>Sidebar Color:</label>
            <input type="color" id="sidebarColor" value="#2c3e50">
        </div>
        <div>
            <label>
                <input type="checkbox" id="resetSettings"> Reset Settings to Default
            </label>
        </div>
        <div>
            <button id="saveSettings">Save Settings</button>
        </div>
    </div>



    <!-- Main Layout -->
    <div class="main-layout">
        <!-- Main Content Area -->
        <div class="main-content">
            @RenderBody() <!-- This is where page-specific content will be injected -->
        </div>

        <!-- Right Sidebar (Max 10% width, 10 Tabs) -->
        <div class="right-sidebar">
            <div class="tab">
                PROFILE
                <div class="inner-tabs">
                    <div class="tab">USER DETAILS</div>
                    <div class="tab">WORK LOAD</div>
                </div>
            </div>
            <div class="tab">
                SEARCH
                <div class="inner-tabs">
                    <div class="tab">WARD DETIALS</div>
                    <div class="tab">PATIENT INFO </div>
                    <div class="tab">PATIENT DETIALS  </div>
                </div>
            </div>
            <div class="tab">
                ADMINISTRATOR
                <div class="inner-tabs">
                    <div class="tab">REPORTS</div>
                    <div class="tab">USERS DEIALS</div>
                </div>
            </div>
            <div class="tab">
                SERVICE DESK
                <div class="inner-tabs">
                    <div class="tab">RAISE TICKETS</div>
                    <div class="tab">DASH BOARD</div>
                </div>
            </div>
            <div class="tab">
                SETTINGS
                <div class="inner-tabs">
                    <div class="tab"> <button id="settingsButton" class="toggle-buttonS">   ⚙️ </button></div>
                </div>
            </div>

                <!-- Add more tabs as needed -->
            </div>

    </div>

    <!-- Footer -->
    <footer>
        &copy; 2024 - Hospital Management System
    </footer>
    <!-- Page Loader -->
    <div id="pageLoader">
        <div id="loaderContainer">
            @*<img src="your-loader-image.gif" alt="Loading..." />*@ <!-- Replace with your image -->
            <img src="~/Media/Images/TDMICON.png" alt="Loading..." height="100px" width="100px" style="margin-right: 10px;" />
        </div>
    </div>
    <script>

        // Hide the loader when the page is fully loaded
        window.addEventListener('load', function () {
            document.getElementById('pageLoader').style.display = 'none';
        });
        // Session Timer
        let sessionTime = 0.5 * 60; // 5 minutes in seconds
        const resetTime = 0.6 * 60; // Reset time (same as sessionTime)
        let countdownInterval; // To manage the countdown interval

        // Update Date/Time
        function updateDateTime() {
            const now = new Date();
            document.getElementById('currentDateTime').textContent = now.toLocaleString();
        }
        setInterval(updateDateTime, 1000);

        function updateSessionTimer() {
            const minutes = Math.floor(sessionTime / 60);
            const seconds = sessionTime % 60;
            document.getElementById('sessionTimer').textContent = `${minutes}:${seconds < 10 ? '0' + seconds : seconds}`;

            if (sessionTime > 0) {
                sessionTime--;

                // Show countdown in last 10 seconds
                if (sessionTime === 10) {
                    showCountdownModal(); // Display the countdown modal
                }
            } else {
                clearInterval(countdownInterval); // Clear countdown interval
                showLogoutMessage(); // Show logout message when timer reaches 0
            }
        }
        setInterval(updateSessionTimer, 1000);

        // Reset timer on mouse move
        document.addEventListener('mousemove', function () {
            sessionTime = resetTime;
            clearCountdown(); // Clear countdown if modal is showing
        });

        // Show Countdown Modal
        function showCountdownModal() {
            // Create a modal container
            const modal = document.createElement('div');
            modal.id = 'countdownModal'; // Assign ID for easy reference
            modal.style.position = 'fixed';
            modal.style.top = '0';
            modal.style.left = '0';
            modal.style.width = '100%';
            modal.style.height = '100%';
            modal.style.backgroundColor = 'rgba(0, 0, 0, 0.5)';
            modal.style.display = 'flex';
            modal.style.justifyContent = 'center';
            modal.style.alignItems = 'center';
            modal.style.zIndex = '1000';

            // Create the modal content
            const modalContent = document.createElement('div');
            modalContent.style.backgroundColor = 'white';
            modalContent.style.padding = '20px';
            modalContent.style.borderRadius = '10px';
            modalContent.style.textAlign = 'center';
            modalContent.style.boxShadow = '0px 4px 10px rgba(0, 0, 0, 0.25)';

            const message = document.createElement('p');
            message.textContent = 'Your session is about to expire. Logging out in:';
            message.style.marginBottom = '20px';

            const countdownDisplay = document.createElement('h1');
            countdownDisplay.id = 'countdownDisplay';
            countdownDisplay.textContent = '10'; // Start countdown from 10
            countdownDisplay.style.fontSize = '48px';
            countdownDisplay.style.color = 'red';
            countdownDisplay.style.margin = '0';

            modalContent.appendChild(message);
            modalContent.appendChild(countdownDisplay);
            modal.appendChild(modalContent);

            // Append modal to body
            document.body.appendChild(modal);

            // Start countdown
            let countdownValue = 10;
            countdownInterval = setInterval(() => {
                countdownValue--;
                countdownDisplay.textContent = countdownValue;

                if (countdownValue <= 0) {
                    clearInterval(countdownInterval); // Stop countdown
                    showLogoutMessage(); // Show logout message
                }
            }, 1000);
        }

        // Clear countdown and modal
        function clearCountdown() {
            clearInterval(countdownInterval);
            const modal = document.getElementById('countdownModal');
            if (modal) {
                modal.remove(); // Remove modal if it exists
            }
        }

        // Show Logout Message
        function showLogoutMessage() {
            clearCountdown(); // Ensure countdown modal is cleared

            // Create a modal container
            const modal = document.createElement('div');
            modal.style.position = 'fixed';
            modal.style.top = '0';
            modal.style.left = '0';
            modal.style.width = '100%';
            modal.style.height = '100%';
            modal.style.backgroundColor = 'rgba(0, 0, 0, 0.5)';
            modal.style.display = 'flex';
            modal.style.justifyContent = 'center';
            modal.style.alignItems = 'center';
            modal.style.zIndex = '1000';

            // Create the modal content
            const modalContent = document.createElement('div');
            modalContent.style.backgroundColor = 'white';
            modalContent.style.padding = '20px';
            modalContent.style.borderRadius = '10px';
            modalContent.style.textAlign = 'center';
            modalContent.style.boxShadow = '0px 4px 10px rgba(0, 0, 0, 0.25)';

            const message = document.createElement('p');
            message.textContent = 'Your session has expired. Please log in again.';
            message.style.marginBottom = '20px';

            const okButton = document.createElement('button');
            okButton.textContent = 'OK';
            okButton.style.padding = '10px 20px';
            okButton.style.border = 'none';
            okButton.style.backgroundColor = '#3498db';
            okButton.style.color = 'white';
            okButton.style.borderRadius = '5px';
            okButton.style.cursor = 'pointer';

            // Redirect to login page on button click
            okButton.addEventListener('click', function () {
                window.location.href = 'https://localhost:44386/Login/Login'; // Replace with the actual login page URL
            });

            modalContent.appendChild(message);
            modalContent.appendChild(okButton);
            modal.appendChild(modalContent);

            document.body.appendChild(modal);
        }

        // Sidebar toggle button logic
        const toggleButton = document.getElementById('toggleMaster');
        const rightSidebar = document.querySelector('.right-sidebar');

        toggleButton.addEventListener('click', function () {
            if (rightSidebar.style.display === 'none' || rightSidebar.style.display === '') {
                rightSidebar.style.display = 'flex'; // Show the sidebar
            } else {
                rightSidebar.style.display = 'none'; // Hide the sidebar
            }
        });
    </script>
<script>
    // Function to load settings from localStorage
    function loadSettings() {
        const isSidebarVisible = localStorage.getItem('sidebarVisible') === 'true';
        const isClockVisible = localStorage.getItem('clockVisible') === 'true';
        const isTimerVisible = localStorage.getItem('timerVisible') === 'true';
        const pageColor = localStorage.getItem('pageColor') || '#f4f4f4'; // Default to light grey if no value saved
        const headerColor = localStorage.getItem('headerColor') || '#3498db'; // Default header color
        const footerColor = localStorage.getItem('footerColor') || '#2c3e50'; // Default footer color
        const sidebarColor = localStorage.getItem('sidebarColor') || '#2c3e50'; // Default sidebar color

        // Apply settings to the page
        document.querySelector('.right-sidebar').style.display = isSidebarVisible ? 'flex' : 'none';
        document.getElementById('digitalClock').style.display = isClockVisible ? 'block' : 'none';
        document.getElementById('sessionTimer').style.display = isTimerVisible ? 'block' : 'none';
        document.body.style.backgroundColor = pageColor;

        // Set header, footer, and sidebar colors
        document.querySelector('header').style.backgroundColor = headerColor;
        document.querySelector('footer').style.backgroundColor = footerColor;
        document.querySelector('.right-sidebar').style.backgroundColor = sidebarColor; // Apply sidebar color

        // Set the checkbox states to reflect the saved settings
        document.getElementById('toggleSidebar').checked = isSidebarVisible;
        document.getElementById('toggleClock').checked = isClockVisible;
        document.getElementById('toggleTimer').checked = isTimerVisible;
        document.getElementById('backgroundColor').value = pageColor;
        document.getElementById('headerColor').value = headerColor;
        document.getElementById('footerColor').value = footerColor;
        document.getElementById('sidebarColor').value = sidebarColor; // Set sidebar color input
    }

    // Reset settings to default values
    function resetSettings() {
        localStorage.removeItem('sidebarVisible');
        localStorage.removeItem('clockVisible');
        localStorage.removeItem('timerVisible');
        localStorage.removeItem('pageColor');
        localStorage.removeItem('headerColor');
        localStorage.removeItem('footerColor');
        localStorage.removeItem('sidebarColor');

        // Load the default settings after clearing localStorage
        loadSettings();
    }

    // Hide the loader on page load
    window.addEventListener('load', function () {
        document.getElementById('pageLoader').style.display = 'none'; // Hide loader initially
        loadSettings(); // Load settings from localStorage
    });

    // Toggle Settings Panel visibility
    document.getElementById('settingsButton').addEventListener('click', function () {
        const settingsPanel = document.getElementById('settingsPanel');
        settingsPanel.style.display = settingsPanel.style.display === 'none' ? 'block' : 'none';
    });

    // Save Settings
    document.getElementById('saveSettings').addEventListener('click', function () {
        const isSidebarVisible = document.getElementById('toggleSidebar').checked;
        const isClockVisible = document.getElementById('toggleClock').checked;
        const isTimerVisible = document.getElementById('toggleTimer').checked;
        const pageColor = document.getElementById('backgroundColor').value;
        const headerColor = document.getElementById('headerColor').value;
        const footerColor = document.getElementById('footerColor').value;
        const sidebarColor = document.getElementById('sidebarColor').value;

        // Toggle Sidebar visibility
        document.querySelector('.right-sidebar').style.display = isSidebarVisible ? 'flex' : 'none';

        // Toggle Digital Clock visibility
        document.getElementById('digitalClock').style.display = isClockVisible ? 'block' : 'none';

        // Toggle Session Timer visibility
        document.getElementById('sessionTimer').style.display = isTimerVisible ? 'block' : 'none';

        // Change Page Background Color
        document.body.style.backgroundColor = pageColor;

        // Change Header, Footer, and Sidebar Colors
        document.querySelector('header').style.backgroundColor = headerColor;
        document.querySelector('footer').style.backgroundColor = footerColor;
        document.querySelector('.right-sidebar').style.backgroundColor = sidebarColor;

        // Save settings to localStorage
        localStorage.setItem('sidebarVisible', isSidebarVisible);
        localStorage.setItem('clockVisible', isClockVisible);
        localStorage.setItem('timerVisible', isTimerVisible);
        localStorage.setItem('pageColor', pageColor);
        localStorage.setItem('headerColor', headerColor);
        localStorage.setItem('footerColor', footerColor);
        localStorage.setItem('sidebarColor', sidebarColor);

        // Hide settings panel after saving
        document.getElementById('settingsPanel').style.display = 'none';
    });

    // Add event listener to the Reset Settings checkbox
    document.getElementById('resetSettings').addEventListener('change', function () {
        if (this.checked) {
            resetSettings(); // Reset settings if checkbox is checked
        }
    });

</script>


</body>
</html>
