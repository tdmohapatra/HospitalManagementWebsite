@using HospitalManagementWebsite.Models.InternalUser
@model InternalUser

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>Internal User Login</title>
    <style>
        /* Global Styles */
        body {
            font-family: 'Arial', sans-serif;
            margin: 0;
            padding: 0;
            background: #f5f5f5;
            height: 100vh;
            overflow: hidden;
        }

        /* Geometric background pattern */
        .background-pattern {
            position: absolute;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            background-image:
                linear-gradient(45deg, #ff6f61 25%, transparent 25%) 0 0,
                linear-gradient(-45deg, #ff6f61 25%, transparent 25%) 0 0,
                linear-gradient(45deg, transparent 75%, #ff6f61 75%) 0 0,
                linear-gradient(-45deg, transparent 75%, #ff6f61 75%) 0 0;
            background-size: 50px 50px;
            background-repeat: repeat;
            z-index: -1; /* Keep the background behind the content */
        }

        .container {
            width: 100%;
            max-width: 600px; /* Main container width */
            background-color: rgba(255, 255, 255, 0.9);
            padding: 40px 40px 50px;
            border-radius: 8px;
            box-shadow: 0 0 20px rgba(0, 0, 0, 0.15);
            position: relative;
            z-index: 1;
            animation: fadeIn 0.8s ease-out;
        }

        h2 {
            font-size: 28px;
            margin-bottom: 30px;
            color: #333;
        }

        .form-control {
            height: 45px;
            font-size: 16px;
            width: 100%;
            padding: 12px;
            margin-bottom: 20px;
            border: 1px solid #ddd;
            border-radius: 5px;
            box-sizing: border-box;
        }

        .btn-block {
            font-size: 16px;
            padding: 14px;
            width: 100%;
            border: none;
            border-radius: 5px;
            background-color: #007bff;
            color: white;
            cursor: pointer;
            transition: background-color 0.3s ease;
        }

        .btn-block:hover {
            background-color: #0056b3;
        }

        .toggle-password {
            position: absolute;
            right: 15px;
            top: 50%;
            transform: translateY(-50%);
            cursor: pointer;
            font-size: 18px;
        }

        .toggle-password.green {
            color: green;
        }

        .toggle-password.red {
            color: red;
        }

        /* Form and container responsiveness */
        @@media (max-width: 768px) {
            .container {
                padding: 25px;
                max-width: 90%;
            }

            .form-control {
                font-size: 14px;
            }

            .btn-block {
                padding: 12px;
                font-size: 14px;
            }
        }

        @@media (max-width: 480px) {
            .container {
                padding: 15px;
            }

            .form-control {
                font-size: 14px;
                padding: 10px;
            }

            .btn-block {
                padding: 12px;
                font-size: 14px;
            }
        }

        @@keyframes fadeIn {
            from {
                opacity: 0;
            }

            to {
                opacity: 1;
            }
        }
    </style>
</head>
<body>
    <div class="background-pattern"></div>

    <div class="container">
        @using (Html.BeginForm())
        {
            <h2 class="text-center">NewLogin</h2>
            <div class="form-group">
                <label for="ITNUSERNAME">User Name:</label>
                @Html.TextBoxFor(x => x.ITNUSERNAME, new { @class = "form-control", placeholder = "Enter your username", id = "ITNUSERNAME" })
                @Html.ValidationMessageFor(x => x.ITNUSERNAME, "", new { @class = "text-danger" })
            </div>
            <div class="form-group">
                <label for="INTPASSWORD">Password:</label>
                <div class="position-relative">
                    @Html.TextBoxFor(x => x.INTPASSWORD, new { @class = "form-control", placeholder = "Enter your password", type = "password", id = "INTPASSWORD" })
                    <span toggle="#INTPASSWORD" class="fa fa-fw fa-eye toggle-password" id="eye-icon"></span>
                </div>
                @Html.ValidationMessageFor(x => x.INTPASSWORD, "", new { @class = "text-danger" })
            </div>

            <div class="form-group">
                <label for="INTDEPARTMENTCODE">Department:</label>
                @Html.DropDownListFor(x => x.INTDEPARTMENTCODE,
       (SelectList)ViewBag.Departments,
       "-Select Department-",
       new { @class = "form-control" })

                @Html.ValidationMessageFor(x => x.INTDEPARTMENTCODE, "", new { @class = "text-danger" })

                @*@Html.DropDownListFor(x => x.INTDEPARTMENTCODE, new SelectList(ViewBag.Departments, "ID", "Name"), "-Select Department-", new { @class = "form-control" })
        @Html.ValidationMessageFor(x => x.INTDEPARTMENTCODE, "", new { @class = "text-danger" })*@
            </div>

            <div class="checkbox-group mt-3 form-check form-switch">
                <input class="form-check-input" type="checkbox" id="stayLoggedIn">
                <label class="form-check-label" for="stayLoggedIn">Stay logged in</label>
            </div>

            <div class="form-group mt-4">
                <button type="submit" class="btn-block">Login</button>
            </div>
            <div class="mt-3 text-center">
                <a href="@Url.Action("Register", "InternalUser")" class="btn btn-success d-inline-flex align-items-center">
                    Go to Register Page
                    <i class="bi bi-arrow-right ms-2"></i>
                </a>
            </div>
        }
    </div>

    <div class="mt-3 text-center">
        <a href="https://localhost:44386/Home/TDMWELCOMEPAGE" class="btn btn-secondary btn-sm rounded shadow">
            <i class="bi bi-arrow-left"></i> Back to Home Page
        </a>
    </div>

    <script>
        document.getElementById("eye-icon").addEventListener("click", function () {
            var passwordField = document.getElementById("INTPASSWORD");
            var icon = document.getElementById("eye-icon");

            // Toggle password visibility
            if (passwordField.type === "password") {
                passwordField.type = "text"; // Show password
                icon.classList.remove("fa-eye");
                icon.classList.add("fa-eye-slash"); // Change icon to "eye-slash"
            } else {
                passwordField.type = "password"; // Hide password
                icon.classList.remove("fa-eye-slash");
                icon.classList.add("fa-eye"); // Change icon to "eye"
            }

            validatePassword(); // Call to check the password validity
        });

        function validatePassword() {
            var passwordField = document.getElementById("INTPASSWORD");
            var icon = document.getElementById("eye-icon");
            var passwordValue = passwordField.value.trim();

            // If password is empty or too short, make icon red
            if (passwordValue === "") {
                icon.classList.remove("green");
                icon.classList.add("red"); // Red if empty
            } else if (passwordValue.length >= 3) {
                icon.classList.remove("red");
                icon.classList.add("green"); // Green if password is valid
            } else {
                icon.classList.remove("green");
                icon.classList.add("red"); // Red if password is too short
            }
        }

                    // Validate on input change
                    document.getElementById("INTPASSWORD").addEventListener("input", validatePassword);

                // Handle form submission for saving user details in session
                document.querySelector("form").addEventListener("submit", function (event) {
                    var stayLoggedIn = document.getElementById("stayLoggedIn").checked;
                    if (stayLoggedIn) {
                        // Store username and password in session for 1 hour
                        var username = document.getElementById("ITNUSERNAME").value;
                        var password = document.getElementById("INTPASSWORD").value;
                        var expires = new Date();
                        expires.setHours(expires.getHours() + 1); // Set expiration time to 1 hour

                        // Store username and password in localStorage with expiry time
                        localStorage.setItem('username', username);
                        localStorage.setItem('password', password);
                        localStorage.setItem('expires', expires.toISOString());
                    }
                });





    </script>

</body>
</html>
