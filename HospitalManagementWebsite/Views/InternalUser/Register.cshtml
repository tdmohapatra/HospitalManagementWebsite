@using HospitalManagementWebsite.Models.InternalUser
@model InternalUser

<!DOCTYPE html>
<html lang="en">
<head>
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>Internal User Registration</title>

    <style>
        .reg-container {
            width: 100%;
            max-width: 600px;
            background-color: #fff;
            border-radius: 8px;
            box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);
            padding: 20px;
            box-sizing: border-box;
            margin-left: 25%;
        }

        .reg-profile-img-preview {
            width: 100px;
            height: 100px;
            border-radius: 8px;
            object-fit: cover;
            margin-top: 10px;
        }

        .reg-error-message {
            color: red;
            font-size: 12px;
            display: none;
        }

        .form-label {
            font-weight: bold;
        }

        .input-group {
            display: flex;
            align-items: center;
        }

        .input-group .form-control {
            flex: 1;
        }

        .input-group i {
            margin-right: 10px;
        }

        .password-container {
            position: relative;
        }

        /* Responsive Styles */
        @@media (max-width: 600px) {
            .reg-container {
                width: 100%;
                padding: 15px;
            }

            .reg-profile-img-preview {
                width: 80px;
                height: 80px;
            }
        }
    </style>
</head>
<body>
    <div class="reg-container">
        @using (Html.BeginForm())
        {
            <h2 class="text-center mb-4">Internal User Registration</h2>

            <!-- Dialog Box -->
            <dialog id="myDialog">
                <p>Please fill in all the details correctly.</p>
                <button id="closeBtn" class="btn btn-primary">Close</button>
            </dialog>

            <!-- Username Field -->
            <div class="mb-3 input-group">
                <label for="ITNUSERNAME" class="form-label">Username:</label>
                <i class="bi bi-person-fill"></i>
                @Html.TextBoxFor(x => x.ITNUSERNAME, new { @class = "form-control" })
                @Html.ValidationMessageFor(x => x.ITNUSERNAME, "", new { @class = "text-danger" })
            </div>

            <!-- Password Field -->
            <div class="mb-3 password-container input-group">
                <label for="INTPASSWORD" class="form-label">Password:</label>
                <i class="bi bi-lock-fill"></i>
                @Html.PasswordFor(x => x.INTPASSWORD, new { @class = "form-control", id = "Password" })
                @Html.ValidationMessageFor(x => x.INTPASSWORD, "", new { @class = "text-danger" })
                <span id="eye-icon" onclick="togglePasswordVisibility('Password')">
                    <i class="bi bi-eye"></i>
                </span>
            </div>

            <!-- Recheck Password Field -->
            <div class="mb-3 password-container input-group">
                <label for="PasswordRecheck" class="form-label">Recheck Password:</label>
                <i class="bi bi-lock-fill"></i>
                <input type="password" id="PasswordRecheck" class="form-control" />
                <span id="eye-icon-recheck" onclick="togglePasswordVisibility('PasswordRecheck')">
                    <i class="bi bi-eye"></i>
                </span>
                <div id="password-mismatch" class="text-danger" style="display:none;">Passwords do not match.</div>
            </div>

            <!-- Department Field -->
            <div class="mb-3 input-group">
                <label for="INTDEPARTMENTCODE" class="form-label">Department:</label>
                <i class="bi bi-building"></i>
                @Html.DropDownListFor(x => x.INTDEPARTMENTCODE, (SelectList)ViewBag.Departments, "-Select Department-", new { @class = "form-control" })
                @Html.ValidationMessageFor(x => x.INTDEPARTMENTCODE, "", new { @class = "text-danger" })
            </div>

            <!-- Email Field -->
            <div class="mb-3 input-group">
                <label for="EMAIL" class="form-label">Email:</label>
                <i class="bi bi-envelope-fill"></i>
                @Html.TextBoxFor(x => x.EMAIL, new { @class = "form-control" })
                @Html.ValidationMessageFor(x => x.EMAIL, "", new { @class = "text-danger" })
            </div>

            <!-- Mobile Number Field -->
            <div class="mb-3 input-group">
                <label for="MOBILENO" class="form-label">Mobile Number:</label>
                <i class="bi bi-phone-fill"></i>
                @Html.TextBoxFor(x => x.MOBILENO, new { @class = "form-control" })
            </div>

            <!-- Gender Field -->
    <div class="mb-3 input-group">
        <label for="GENDER" class="form-label">Gender:</label>
        <i class="bi bi-gender-ambiguous"></i>
        @*@Html.DropDownListFor(x => x.GENDER, new SelectList(new List<string> { "Male", "Female", "Other" }), "-Select Gender-", new { @class = "form-control" })*@
        @Html.DropDownListFor(x => x.GENDER,
new SelectList(
new List<SelectListItem>
{
    new SelectListItem { Text = "Male", Value = "M" },
    new SelectListItem { Text = "Female", Value = "F" },
    new SelectListItem { Text = "Other", Value = "O" }
},
"Value", "Text"),
 "-Select Gender-",
 new { @class = "form-control" })
    </div>

            <!-- Date of Joining Field -->
            <div class="mb-3 input-group">
                <label for="DOJ" class="form-label">Date of Joining:</label>
                <i class="bi bi-calendar-fill"></i>
                @Html.TextBoxFor(x => x.DOJ, new { @class = "form-control", type = "date" })
            </div>

            <!-- Date of Birth Field -->
            <div class="mb-3 input-group">
                <label for="DOB" class="form-label">Date of Birth:</label>
                <i class="bi bi-calendar-check-fill"></i>
                @Html.TextBoxFor(x => x.DOB, new { @class = "form-control", type = "date" })
                @Html.ValidationMessageFor(x => x.DOB, "", new { @class = "text-danger" })
            </div>

            <!-- Terms and Conditions Checkbox -->
            <div class="mb-3 form-check">
                <input type="checkbox" class="form-check-input" id="termsCheckbox" required />
                <label class="form-check-label" for="termsCheckbox">I agree to the <a href="#">terms and conditions</a>.</label>
            </div>

            <!-- Submit Button -->
            <div class="mb-3">
                <button type="submit" class="btn btn-primary btn-block">REGISTER</button>
            </div>

            <div class="mb-3 text-center">
                <a href="@Url.Action("InternalLogin", "InternalUser")" class="btn btn-success btn-lg rounded shadow">
                    <i class="bi bi-arrow-left"></i> Go back to LogIn Page
                </a>
            </div>
        }
    </div>

    <script>
        // Function to toggle password visibility
        function togglePasswordVisibility(id) {
            const passwordField = document.getElementById(id);
            const eyeIcon = document.getElementById(id === "Password" ? "eye-icon" : "eye-icon-recheck");
            if (passwordField.type === "password") {
                passwordField.type = "text";
                eyeIcon.innerHTML = '<i class="bi bi-eye-slash"></i>'; // Change to "eye-slash" icon
            } else {
                passwordField.type = "password";
                eyeIcon.innerHTML = '<i class="bi bi-eye"></i>'; // Change back to "eye" icon
            }
        }

        // Function to check if passwords match
        document.getElementById('PasswordRecheck').addEventListener('input', function () {
            const password = document.getElementById('Password').value;
            const recheckPassword = document.getElementById('PasswordRecheck').value;
            const mismatchMessage = document.getElementById('password-mismatch');

            if (password !== recheckPassword) {
                mismatchMessage.style.display = 'block';
            } else {
                mismatchMessage.style.display = 'none';
            }
        });
    </script>

</body>
</html>
