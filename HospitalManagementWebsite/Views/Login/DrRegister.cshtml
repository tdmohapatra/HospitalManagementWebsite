@using HospitalManagementWebsite.Models
@model DoctorRegistration

<!DOCTYPE html>
<html lang="en">
<head>
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>Doctor Registration</title>
    <style>
        body {
            font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
            background-color: #f4f4f4;
            margin-top: 5%;
            padding: 0;
            display: flex;
            align-items: center;
            justify-content: center;
            /*min-height: 100vh;*/
        }

        .reg-container {
            width: 100%;
            max-width: 500px;
            background-color: #fff;
            border-radius: 8px;
            box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);
            padding: 20px;
            box-sizing: border-box;
            margin: 20px;
        }

        .reg-table {
            width: 100%;
        }

        .reg-td {
            padding: 10px;
        }

        .reg-input,
        .reg-file-input {
            width: 100%;
            padding: 10px;
            margin-bottom: 10px;
            border: 1px solid #ccc;
            border-radius: 4px;
            font-size: 14px;
        }

        .reg-button {
            background-color: #3498db;
            color: #fff;
            padding: 12px 24px;
            border: none;
            border-radius: 4px;
            cursor: pointer;
            font-size: 16px;
            width: 100%;
        }

        .reg-button:hover {
            background-color: #2980b9;
        }

        .reg-link {
            text-decoration: none;
            color: #3498db;
            display: inline-block;
            margin-top: 10px;
            text-align: center;
            width: 100%;
        }

        .reg-link:hover {
            text-decoration: underline;
        }

        .reg-validation-error {
            color: red;
            font-size: 12px;
        }

        .reg-terms-text {
            font-size: 14px;
        }

        .reg-profile-img-preview {
            width: 100px;
            height: 100px;
            border-radius: 8px;
            object-fit: cover;
            margin-top: 10px;
        }

        .reg-error-message {
            color: red;
            font-size: 12px;
            display: none;
        }

        .reg-checkbox-group {
            display: flex;
            align-items: center;
            justify-content: center;
            margin-top: 10px;
        }

        .reg-checkbox-group input {
            margin-right: 8px;
        }

        /* Responsive Styles */
        @@media (max-width: 600px) {
            .reg-container {
                width: 100%;
                padding: 15px;
            }

            .reg-profile-img-preview {
                width: 80px;
                height: 80px;
            }

            .reg-button {
                padding: 10px;
            }

            .reg-checkbox-group {
                flex-direction: column;
                align-items: flex-start;
            }
        }
    </style>
</head>
<body>
    <div class="reg-container">
        @using (Html.BeginForm())
        {
            <!-- Dialog Box -->
            <dialog id="myDialog">
                <p>Please fill in all the details correctly.</p>
                <button id="closeBtn">Close</button>
            </dialog>

            <table class="reg-table">
                <div>
                    <h2>REGISTRATION PAGE</h2>
                </div>
                <tr>
                    <td class="reg-td">Id</td>
                    <td class="reg-td">@Html.TextBoxFor(x => x.Id, new { @class = "reg-input" })</td>
                </tr>
                <tr>
                    <td class="reg-td">Full Name:</td>
                    <td class="reg-td">
                        @Html.TextBoxFor(x => x.Name, new { @class = "reg-input" })
                        @Html.ValidationMessageFor(x => x.Name, "", new { @class = "reg-validation-error" })
                    </td>
                </tr>
                <tr>
                    <td class="reg-td">Email:</td>
                    <td class="reg-td">
                        @Html.TextBoxFor(x => x.Email, new { @class = "reg-input" })
                        @Html.ValidationMessageFor(x => x.Email, "", new { @class = "reg-validation-error" })
                    </td>
                </tr>
                <tr>
                    <td class="reg-td">Your Password:</td>
                    <td class="reg-td">
                        @Html.TextBoxFor(x => x.Password, new { @class = "reg-input" })
                        @Html.ValidationMessageFor(x => x.Password, "", new { @class = "reg-validation-error" })
                    </td>
                </tr>
                <tr>
                    <td class="reg-td">Mob:</td>
                    <td class="reg-td">@Html.TextBoxFor(x => x.Mob, new { @class = "reg-input" })</td>
                </tr>
                <tr>
                    <td class="reg-td">Department:</td>
                    <td class="reg-td">
                        @Html.TextBoxFor(x => x.Department, new { @class = "reg-input" })
                        @Html.ValidationMessageFor(x => x.Department, "", new { @class = "reg-validation-error" })
                    </td>
                </tr>
                <tr>
                    <td class="reg-td">Designation:</td>
                    <td class="reg-td">
                        <input type="text" class="reg-input" />
                    </td>
                </tr>

                <!-- Profile Photo Field -->
                <tr>
                    <td class="reg-td">Profile Photo:</td>
                    <td class="reg-td">
                        <input type="file" id="ProfilePhoto" name="ProfilePhoto" class="reg-file-input" accept="image/*" onchange="previewImage()" />
                        <img id="profile-img-preview" class="reg-profile-img-preview" style="display:none;" />
                        <div id="error-message" class="reg-error-message"></div>
                    </td>
                </tr>

                <tr>
                    <td colspan="2">
                        <div class="reg-checkbox-group">
                            <input type="checkbox" id="termsCheckbox" required />
                            <label for="termsCheckbox" class="reg-terms-text">I agree to the <a href="#">terms and conditions</a>.</label>
                        </div>
                    </td>
                </tr>

                <tr>
                    <td colspan="2">
                        <button type="submit" class="reg-button" onclick="showDialog()">REGISTER</button>
                    </td>
                </tr>
                <tr>
                    <td colspan="2" style="text-align: center;">
                        <a href="@Url.Action("Login", "Login")" class="reg-link">Go back to LogIn Page</a>
                    </td>
                </tr>
            </table>
        }
    </div>

    <script>
        // Image preview function
        function previewImage() {
            const file = document.getElementById('ProfilePhoto').files[0];
            const errorMessage = document.getElementById('error-message');
            const preview = document.getElementById('profile-img-preview');
            const maxFileSize = 1 * 1024 * 1024; // 1 MB

            if (file) {
                // Check if file is an image
                if (!file.type.startsWith('image/')) {
                    errorMessage.textContent = 'Please upload a valid image file.';
                    errorMessage.style.display = 'block';
                    preview.style.display = 'none';
                    return;
                }

                // Check file size
                if (file.size > maxFileSize) {
                    errorMessage.textContent = 'File size must be less than 1 MB.';
                    errorMessage.style.display = 'block';
                    preview.style.display = 'none';
                    return;
                }

                // Create an image object to load the file
                const img = new Image();
                img.onload = function () {
                    // Determine the smaller dimension (width or height) to make a square crop
                    const size = Math.min(img.width, img.height);

                    // Create a canvas element to draw the cropped image
                    const canvas = document.createElement('canvas');
                    const ctx = canvas.getContext('2d');

                    // Set the canvas width and height to the smaller dimension (to make it square)
                    canvas.width = size;
                    canvas.height = size;

                    // Calculate the starting point for cropping the image (center the crop)
                    const x = (img.width - size) / 2;
                    const y = (img.height - size) / 2;

                    // Draw the cropped image onto the canvas
                    ctx.drawImage(img, x, y, size, size, 0, 0, size, size);

                    // Get the cropped image as a base64 URL
                    const croppedImageURL = canvas.toDataURL('image/jpeg');

                    // Display the cropped image in the preview
                    preview.style.display = 'block';
                    preview.src = croppedImageURL;
                    errorMessage.style.display = 'none'; // Hide any previous error messages
                };

                // Read the image file
                img.src = URL.createObjectURL(file);
            }
        }

        // Function to show dialog box
        function showDialog() {
            const dialog = document.getElementById('myDialog');
            dialog.showModal();
        }

        // Close dialog box when "close" button is clicked
        const closeBtn = document.getElementById('closeBtn');
        closeBtn.addEventListener('click', () => {
            const dialog = document.getElementById('myDialog');
            dialog.close();
        });
    </script>
    
</body>
</html>
